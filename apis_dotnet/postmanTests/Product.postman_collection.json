{
	"info": {
		"_postman_id": "2cde2089-85db-49a6-9ce7-1ef4ad3b35b5",
		"name": "Product",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product creation was successful\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.environment.set(\"product_id\", jsonData.id);",
							"  pm.expect(pm.response.code).to.equal(201);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"PRODUCT NAME CREATE\",\n    \"description\": \"This is an incredible test!\",\n    \"image\": \"test_product.jpeg\",\n    \"price\": 500,\n    \"shippingCost\": 10,\n    \"brand\": \"Test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{product_url}}",
					"host": [
						"{{product_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReadProducts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check that it returns an array\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{product_url}}",
					"host": [
						"{{product_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReadProductById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check that id returned is correct\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(parseInt(jsonData.id)).to.equal(parseInt(pm.environment.get(\"product_id\")));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{product_url}}/{{product_id}}",
					"host": [
						"{{product_url}}"
					],
					"path": [
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product creation was successful\", function () {",
							"  pm.expect(pm.response.code).to.be.equal(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{product_name_update}}\",\n    \"brand\": \"Test\",\n    \"description\": \"This is an incredible test!\",\n    \"image\": \"test_product.jpeg\",\n    \"price\": 500.00,\n    \"shippingCost\": 10.00\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{product_url}}/{{product_id}}",
					"host": [
						"{{product_url}}"
					],
					"path": [
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReadProductByIdAfterUpdate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check that id returned is correct\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(parseInt(jsonData.id)).to.equal(parseInt(pm.environment.get(\"product_id\")));",
							"});",
							"",
							"pm.test(\"Check that name was updated correctly\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.name).to.equal(pm.environment.get(\"product_name_update\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{product_url}}/{{product_id}}",
					"host": [
						"{{product_url}}"
					],
					"path": [
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{product_url}}/{{product_id}}",
					"host": [
						"{{product_url}}"
					],
					"path": [
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReadProductByIdAfterDelete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if Not Found Code is returned\", function () {",
							"  pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{product_url}}/{{product_id}}",
					"host": [
						"{{product_url}}"
					],
					"path": [
						"{{product_id}}"
					]
				}
			},
			"response": []
		}
	]
}